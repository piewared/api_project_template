log:
  stdout: true
  level: info
  outputFile: "/var/log/temporal/temporal.log"

persistence:
  defaultStore: default
  visibilityStore: visibility
  numHistoryShards: 4
  datastores:
    default:
      driver: postgres12
      host: postgres
      port: 5432
      database: temporal
      user: temporal
      password: temporal
      maxConns: 20
      maxIdleConns: 20
      maxConnLifetime: "1h"
      connectAttributes:
        application_name: temporal-server
    visibility:
      driver: postgres12
      host: postgres
      port: 5432
      database: temporal_visibility
      user: temporal
      password: temporal
      maxConns: 10
      maxIdleConns: 10
      maxConnLifetime: "1h"
      connectAttributes:
        application_name: temporal-server

global:
  membership:
    maxJoinDuration: 30s
    broadcastAddress: "127.0.0.1"
  pprof:
    port: 7936
  metrics:
    prometheus:
      timerType: "histogram"
      listenAddress: "127.0.0.1:8000"
  tls:
    # TLS configuration for inter-service communication
    internode:
      server:
        certFile: /etc/temporal/certs/temporal-server.crt
        keyFile: /etc/temporal/certs/temporal-server.key
        clientCaFile: /etc/temporal/certs/ca.crt
        requireClientAuth: true
      client:
        serverName: temporal-server
        certFile: /etc/temporal/certs/temporal-client.crt
        keyFile: /etc/temporal/certs/temporal-client.key
        caFile: /etc/temporal/certs/ca.crt
  authorization:
    jwtKeyProvider:
      keySourceURIs:
        - file:///etc/temporal/certs/temporal-jwt-public.key
    defaultAuthorizationClaimScope: temporal-system
    systemAuthorizationClaimScope: temporal-system

services:
  frontend:
    rpc:
      grpcPort: 7233
      membershipPort: 6933
      bindOnLocalHost: false
      # TLS configuration for frontend service
      tls:
        certFile: /etc/temporal/certs/temporal-server.crt
        keyFile: /etc/temporal/certs/temporal-server.key
        clientCaFile: /etc/temporal/certs/ca.crt
        requireClientAuth: true
    # Authorization configuration
    authorization:
      authorizers:
        - name: default
          mapping:
            temporal-system: admin
            temporal-worker: worker
            temporal-client: client
      bindOnLocalHost: false
    metrics:
      prometheus:
        timerType: "histogram"
        listenAddress: "0.0.0.0:9090"

  matching:
    rpc:
      grpcPort: 7235
      membershipPort: 6935
      bindOnLocalHost: false

  history:
    rpc:
      grpcPort: 7234
      membershipPort: 6934
      bindOnLocalHost: false

  worker:
    rpc:
      grpcPort: 7239
      membershipPort: 6939
      bindOnLocalHost: false

clusterMetadata:
  enableGlobalNamespace: false
  failoverVersionIncrement: 10
  masterClusterName: "active"
  currentClusterName: "active"
  clusterInformation:
    active:
      enabled: true
      initialFailoverVersion: 1
      rpcName: "frontend"
      rpcAddress: "localhost:7233"

dcRedirectionPolicy:
  policy: "noop"
  toDC: ""

archival:
  history:
    state: "enabled"
    enableRead: true
    provider:
      filestore:
        fileMode: "0666"
        dirMode: "0766"
  visibility:
    state: "enabled"
    enableRead: true
    provider:
      filestore:
        fileMode: "0666"
        dirMode: "0766"

namespaceDefaults:
  archival:
    history:
      state: "enabled"
      URI: "file:///tmp/temporal_archival/development"
    visibility:
      state: "enabled"
      URI: "file:///tmp/temporal_vis_archival/development"

publicClient:
  hostPort: "localhost:7233"